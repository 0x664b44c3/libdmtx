=================================================================
            libdmtx - Open Source Data Matrix Software
=================================================================

               libdmtx README file (all platforms)

This summary of the libdmtx package applies generally to all
platforms. For instructions regarding your specific platform
please also read the README.xxx file in this directory that
matches your system (e.g., README.linux, README.windows,
README.osx, etc...).


1. Introduction
-----------------------------------------------------------------

libdmtx is open source software for reading and writing Data
Matrix barcodes on Linux, Unix, OS X, Windows, and certain mobile
devices. At its core libdmtx is a shared library, allowing C/C++
programs to use its capabilities without restrictions or
overhead.

The included utility programs, dmtxread and dmtxwrite, serve as
the official interface to libdmtx from the command line, and also
provide a good reference for programmers who wish to write their
own programs that interact with libdmtx. All of the software in
the libdmtx package is distributed under the LGPL and can be used
freely under these terms.


2. Installation
-----------------------------------------------------------------

libdmtx uses GNU Autotools so installation should be familiar to
free software veterans. If your platform cannot easily run the
Autotools scripts (e.g., MS Visual Studio) then please refer to
the appropriate platform-specific README.xxx located in this
directory for alternate instructions.

Most people can simply run the following:

  $ ./configure
  $ make
  $ sudo make install

Note: If the 'sudo' command is not configured on your system then
you can alternatively yell "Yeeehaww!" as you log in as root and
run this instead:

  $ make install

If you're awesome and it compiled on the first try then you can
now use the newly built library and utility programs that were
just installed system-wide.

However, if something when wrong then keep reading.

If you obtained libdmtx from its Subversion repository then you
probably got an error saying something like "configure: error:
cannot find install-sh". Run this command and try again:

  $ ./autogen.sh

The autogen.sh command requires autoconf, automake, libtool, and
pkgconfig to be installed on your system.

Errors encountered during the "make" step are often a result of
missing software dependencies. These dependencies are listed in
Appendix A. of this document. Install any missing software and
try again.

For more information on the "./configure" step please read the
INSTALL file located in this directory. If the INSTALL file does
not exist then you may need to run the "./autogen.sh" step first.

If you want to ensure that everything built correctly you can
optionally build the test programs like this:

  $ make check


3. Components
-----------------------------------------------------------------

libdmtx serves a diverse audience and contains several unrelated
components, many of which may not be useful to you. Package
components generally fall into one of four categories:

  * Core library      (useful to all libdmtx users)
  * Utility programs  (useful to command line users)
  * Language Wrappers (useful to non-C/C++ developers)
  * Test programs     (useful to libdmtx developers)

Appendix A. at the end of this document provides a full list of
these components and their properties.


4. Basic Usage
-----------------------------------------------------------------

New users are encouraged to read the man pages for the library
and command line utilities. However, here are a few simple cases
to get you started:

The dmtxwrite utility turns messages into a barcode images.
Messages can be passed to the utility via STDIN or file, and
likewise the output images can be written to STDOUT or file. The
following examples all produce equivalent results:

  $ echo -n 123456 | dmtxwrite > image.png
  $ echo -n 123456 | dmtxwrite -o image.png
  $ echo -n 123456 > message.txt; dmtxwrite message.txt > image.png
  $ dmtxwrite <(echo -n 123456) -o image.png

The dmtxread utility turns barcode images into messages. Images
can be passed to the utility via STDIN or file, and the output is
written to STDOUT. The following examples both produce equivalent
results:

  $ dmtxread -n image.png
  $ cat image.png | dmtxread -n

Other typical cases:

  $ dmtxread -n image1.png image2.png image3.png
  $ dmtxread -m500 -n image.png

You can even combine the utilities like this:

  $ echo 'Hello, world!' | dmtxwrite | dmtxread
  Hello, world!

  $ dmtxread image1.png | dmtxwrite -o image2.png

Note in this last example that the resulting image2.png might
look nothing like image1.png. They will both contain barcodes
that hold the same message, but the similarities end there.


5. Contact
-----------------------------------------------------------------

Official website:      http://www.libdmtx.org
SourceForge.net page:  http://www.sourceforge.net/projects/libdmtx
OhLoh.net page:        https://www.ohloh.net/projects/libdmtx
Open mailing list:     libdmtx-open_discussion@lists.sourceforge.net


Appendix A. Full Listing of libdmtx Components
-----------------------------------------------------------------

Name:        libdmtx
Type:        Core library
Description: Data Matrix encoding/decoding logic
Location:    libdmtx
Build:       make
Requires:    No dependencies

-----------------------------------

Name:        dmtxread
Type:        Utility program
Description: Read Data Matrix barcodes from the command line
Location:    libdmtx/util/dmtxread
Build:       make
Requires:    GraphicsMagick

-----------------------------------

Name:        dmtxwrite
Type:        Utility program
Description: Create Data Matrix barcodes from the command line
Location:    libdmtx/util/dmtxwrite
Build:       make
Requires:    libpng

-----------------------------------

Name:        dmtxquery
Type:        Utility program (currently non functional)
Description: Query and merge scan results from dmtxread utility
Location:    libdmtx/util/dmtxquery
Build:       make
Requires:    No dependencies

-----------------------------------

Name:        pydmtx
Type:        Language wrapper
Description: Python libdmtx wrapper
Location:    libdmtx/wrappers/python
Build:       See INSTALL file in libdmtx/wrappers/python directory
Requires:    python, pil

-----------------------------------

Name:        libdmtx-php
Type:        Language wrapper
Description: PHP libdmtx wrapper
Location:    libdmtx/wrappers/php
Build:       See INSTALL file in libdmtx/wrappers/php directory
Requires:    php, php-cli, php-common

-----------------------------------

Name:        libdmtx Cocoa wrapper
Type:        Language wrapper
Description: Cocoa libdmtx wrapper
Location:    libdmtx/wrappers/cocoa
Build:       See INSTALL file in libdmtx/wrappers/cocoa directory
Requires:    x

-----------------------------------

Name:        gltest
Type:        test program
Description: Scan simulated camera input from OpenGL in realtime
Location:    libdmtx/
Build:       make check
Requires:    mesa-libGL, mesa-libGLU, SDL, libpng

-----------------------------------

Name:        simpletest
Type:        test program
Description: Simple round-trip encoding and decoding test
Build:       make check
Requires:    No dependencies

-----------------------------------

Name:        unittest
Type:        test program
Description: Unit test program
Build:       make check
Requires:    No dependencies

-----------------------------------

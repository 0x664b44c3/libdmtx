This file is more of a checklist than a script. Maybe think of it
as a manual script.


Common Tasks
-----------------------------------------------------------------

Set file to be executable
$ svn propset svn:executable ON filename.sh

Enable $Id$ keyword expansion for a newly added file
$ svn propset svn:keywords 'Id' filename.sh

Update experimental branch with latest trunk files
$ svn co https://libdmtx.svn.sourceforge.net/svnroot/libdmtx/branches/experimental-mbl dmtx_exp
$ cd dmtx_exp
$ svn merge --ignore-ancestry \
      https://libdmtx.svn.sourceforge.net/svnroot/libdmtx/branches/experimental-mbl \
      https://libdmtx.svn.sourceforge.net/svnroot/libdmtx/trunk .
(verify updates)
$ svn commit

Generate splint warnings
$ splint -posix-strict-lib dmtx.c


Release Checklist
-----------------------------------------------------------------

1) o Include newly added files in lists below if appropriate

2) o Create copy of this file as living checklist

3) o Test for common style and formatting issues

   o $ script/check_all.sh .

4) o Review and close applicable bugs and feature requests

5) o Write and finalize release documentation

   o ReleaseNotes.txt (not in SVN or source distribution)

   o ChangeLog               o KNOWNBUG
   o NEWS                    o TODO

   o README                  o README.cygwin
   o README.freebsd          o README.linux
   o README.mingw            o README.osx
   o README.unix             o README.visualc

   o test/rotate_test/README
   o project/visualc9/README.txt

   o wrapper/cocoa/README    o wrapper/java/README
   o wrapper/php/README      o wrapper/python/README
   o wrapper/ruby/README

   o man/dmtxread.1          o man/dmtxwrite.1
   o man/dmtxquery.1         o man/libdmtx.3

6) o Update version number in appropriate files

   o configure.ac
   o dmtx.h
   o man/libdmtx.3
   o README.visualc
   o wrapper/cocoa/README
   o wrapper/java/README
   o wrapper/php/README
   o wrapper/python/README
   o wrapper/ruby/README

7) o Update release date in appropriate files

   o TODO

   o man/libdmtx.3 (be sure to sync w/ simple_test.c)
   o man/dmtxread.1
   o man/dmtxwrite.1
   o man/dmtxquery.1

   o wrapper/cocoa/README
   o wrapper/java/README
   o wrapper/php/README
   o wrapper/python/README
   o wrapper/ruby/README

8) o Perform final test build

   o $ make uninstall
   o $ make clean
   o $ make distclean
   o $ ./autogen.sh
   o $ ./configure
   o $ make
   o $ make check
   o $ sudo make install
   o $ test/multi_test/multi_test; echo $?
   o $ test/rotate_test/rotate_test
   o $ test/simple_test/simple_test; echo $?
   o $ test/unit_test/unit_test; echo $?

9) o Build and test tarballs

   o $ make dist-gzip
   o $ make dist-bzip2
   o Verify no extraneous files made their way into the
     distribution (especially in the wrapper directories)
   o $ md5sum libdmtx*.tar.* > MD5SUM.txt

10) o Final subversion commit

11) o Upload release to SourceForge

    o $ scp libdmtx-x.x.x.tar.* user@frs.sourceforge.net/uploads

12) o SourceForge release administration

    o Create SourceForge release
    o Upload release notes
    o Publish news item

13) o Tag final release in SVN (do this only after uploading to
      SourceForge in case something changes at the last minute)

    o $ svn copy https://libdmtx.svn.sourceforge.net/svnroot/libdmtx/trunk \
                 https://libdmtx.svn.sourceforge.net/svnroot/libdmtx/tags/release-0.6.0 \
           -m "Tagged libdmtx 0.6.0 release"

14) o Update minor number in trunk (e.g., 0.6.0 -> 0.6.1)

    o Use file list from step 4 above
    o ./autogen.sh
    o ./configure
    o svn commit

15) o Update libdmtx.org with news item, download entry, and new
      project status

Bugs in libdmtx
-----------------------------------------------------------------

1. libdtmx - Core Library
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

The encoding optimizer still occasionally generates codeword
sequences that are not 100% legal according to the ISO
specification.  Everything still appears to decode properly, but
until I have time to go through every corner case and validate
the behavior this will be treated as an experimental feature.
For now dmtxwrite will encode using a straight ASCII scheme by
default.

Base256 encoding doesn't always work right (implementation is
still incomplete).

Scanning "laughton_giant_multi.png" in the libdmtx-images
package currently produces a segmentation fault.


2. dmtxread
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

The follow options are not implemented yet:
  -d, --distortion=K1,K2     radial distortion coefficients
  -D, --diagnose=[op]        diagnostic image output
  -M, --mosaic               (partial implementation)

When using --verbose output the Data Codeword capacity is often
reported incorrectly.


3. dmtxwrite
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

The follow options are not implemented yet:
  -eb, --encodation=b        best encodation (beta only)
  -ef, --encodation=f        fast encodation
  -c,  --color=COLOR         barcode color
  -b,  --bgcolor=COLOR       background color
  -r,  --rotate=DEGREES      rotation angle
  -M,  --mosaic              (partial implementation)


4. Test Programs
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

gltest:
  * Performance can be slow sometimes (unoptimized logic)
  * Occasionally hangs

simpletest:
  * No known issues


5. Scripts in $LIBDMTX/script directory
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

The check_headers.pl script verifies that every function has
a correctly-formed header comment.  But the test condition is
currently pretty simple, and does not test the first function
appearing in each file.

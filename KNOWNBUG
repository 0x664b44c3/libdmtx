Bugs in libdmtx
-----------------------------------------------------------------

1. libdtmx - Core Library
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

The encoding optimizer still occasionally generates codeword
sequences that are not 100% legal according to the ISO
specification.  Everything still appears to decode properly, but
until I have time to go through every corner case and validate
the behavior I will be treating the encoding optimizer as an
experimental feature.  For now dmtxwrite will encode using a
straight ASCII scheme by default.

Base256 encoding doesn't always work right (implementation is
not complete yet).


2. dmtxread
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

The follow options are not implemented yet:
  -d, --distortion=K1,K2     radial distortion coefficients
  -r, --region=REGION        only scan portion of image
  -M, --mosaic               (partial implementation)

When using --verbose output the Data Codeword capacity is often
reported incorrectly.


3. dmtxwrite
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

The follow options are not implemented yet:
  -c, --color=COLOR          barcode color
  -b, --bgcolor=COLOR        background color
  -r, --rotate=DEGREES       rotation angle
  -M, --mosaic               (partial implementation)


4. Test Programs
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

gltest:
  * Performance can be slow sometimes (unoptimized logic)
  * Occasionally hangs

simpletest:
  * No known issues


5. Scripts in $LIBDMTX/script directory
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

The check_headers.pl script verifies that every function has
a correctly-formed header comment.  But the test condition is
currently pretty simple, and does not test the first function
appearing in each file.
